{
  "version": 3,
  "sources": ["../../../app/routes/_panel.panel._index.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/_panel.panel._index.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/_panel.panel._index.tsx\");\n  import.meta.hot.lastModified = \"1696791450900.551\";\n}\n// REMIX HMR END\n\nimport { auth } from \"./login.server\";\nimport { useLoaderData, Link } from \"@remix-run/react\";\nimport prisma from \"./db.server\";\nimport FileIcon from \"~/components/FileIcon\";\nexport const loader = async ({\n  request\n}) => {\n  const profile = await auth.isAuthenticated(request, {\n    failureRedirect: \"/\"\n  });\n  const filesTasks = await prisma.user.findUnique({\n    where: {\n      auth0Id: profile.id\n    },\n    select: {\n      files: {\n        select: {\n          id: true,\n          name: true,\n          type: true\n        }\n      },\n      tasks: {\n        select: {\n          name: true,\n          status: true\n        }\n      }\n    }\n  });\n  if (filesTasks === null) {\n    throw new Error(\"Could not fetch files and tasks.\");\n  }\n  return filesTasks;\n};\nconst FileCard = ({\n  name,\n  type,\n  id\n}) => {\n  return <Link to={`/panel/files/${id}`}>\n      <div className=\"h-full w-full\">\n        <FileIcon type={type} />\n        <div className=\"mt-2 whitespace-normal break-all text-center text-gray-950\">\n            {name}\n        </div>\n      </div>\n    </Link>;\n};\n_c = FileCard;\nexport default function Index() {\n  _s();\n  const {\n    files\n  } = useLoaderData();\n  return <div className=\"p-8 w-full h-full grid grid-cols-6 grid-rows-6 gap-12\">\n    {files.map((file, idx) => file ? <FileCard {...file} key={file.id} /> : <></>)}\n  </div>;\n}\n_s(Index, \"OqeD1x+PgzDkTWRKDjjIqEyHFtk=\", false, function () {\n  return [useLoaderData];\n});\n_c2 = Index;\nvar _c, _c2;\n$RefreshReg$(_c, \"FileCard\");\n$RefreshReg$(_c2, \"Index\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;AAqBA,mBAAqB;AAErB,gBAAmB;AAwCX;AAc6B,IAAAA,gBAAA;AA5ErC,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,yCAA2C,EAAE;AAAA,EACtF;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAMN,IAAI,KAAK,aAAa;AAEtB,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAAoC;AACpC,cAAY,IAAI,eAAe;AACjC;AAsCA,IAAM,WAAW,CAAC;AAAA,EAChB;AAAA,EACA;AAAA,EACA;AACF,MAAM;AACJ,SAAO,mDAAC,QAAK,IAAI,gBAAgB,MAC7B,6DAAC,SAAI,WAAU,iBACb;AAAA,uDAAC,oBAAS,QAAV;AAAA;AAAA;AAAA;AAAA,WAAsB;AAAA,IACtB,mDAAC,SAAI,WAAU,8DACV,kBADL;AAAA;AAAA;AAAA;AAAA,WAEA;AAAA,OAJF;AAAA;AAAA;AAAA;AAAA,SAKA,KANG;AAAA;AAAA;AAAA;AAAA,SAOL;AACJ;AACA,KAAK;AACU,SAAR,QAAyB;AAC9B,KAAG;AACH,QAAM;AAAA,IACJ;AAAA,EACF,IAAI,cAAc;AAClB,SAAO,mDAAC,SAAI,WAAU,yDACnB,gBAAM,IAAI,CAAC,MAAM,QAAQ,OAAO,iDAAC,YAAU,GAAG,MAAM,KAAK,KAAK,IAAI,IAAK;AAAA;AAAA;AAAA;AAAA,SAAE,CAAG,KADxE;AAAA;AAAA;AAAA;AAAA,SAEP;AACF;AACA,GAAG,OAAO,gCAAgC,OAAO,WAAY;AAC3D,SAAO,CAAC,aAAa;AACvB,CAAC;AACD,MAAM;AACN,IAAI;AAAJ,IAAQ;AACR,aAAa,IAAI,UAAU;AAC3B,aAAa,KAAK,OAAO;AAEzB,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": ["import_react"]
}
